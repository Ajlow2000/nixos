precmd() {
    precmd() {
        echo
    }
}

source ~/.nix-profile/etc/profile.d/hm-session-vars.sh

path+=($XDG_BIN_HOME)

# ~~~ Aliases ~~~
alias ls="eza --group-directories-first"
alias ltr="ls --tree"
alias grep="grep --color=auto"
alias gcl="nvim $(git log -1 --name-only --relative --pretty= .)"
# alias gco="nvim $(git show --name-only --pretty=format: $1)" doesnt work
alias tsm="tmux-session-manager"
alias zsm="zellij-session-manager"
alias sm="zellij-session-manager"
alias gcm="conventional-commit"
alias rmgr="repo-manager"
alias gs="git status"
function gl () {
    commitHash=$(git log --color --pretty=format:'%Cgreen(%cs) %Cred%h%Creset %C(bold blue)<%an> -%C(yellow)%d%Creset %s %Creset' --abbrev-commit \
        | fzf --ansi \
        | awk '{print $2}'
    )
    git show $commitHash
}

function hist () {
      print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}

function gb () {
    git_branches="git branch --all --color \
      --format=$'%(HEAD) %(color:yellow)%(refname:short)\t%(color:green)%(committerdate:short)\t%(color:blue)%(subject)' \
      | column --table --separator=$'\t'" \
    && eval "$git_branches" \
    | fzf \
      --ansi \
      --reverse \
      --no-sort \
      --preview-label '[ Commits ]' \
      --preview 'git log $(echo {} \
        | sed "s/^[* ]*//" | \
        awk "{print \$1}") \
        --graph --color  \
        --format="%C(white)%h - %C(green)%cs - %C(blue)%s%C(red)%d"' \
      --bind 'ctrl-f:change-preview-label([ Diff ])' \
      --bind 'ctrl-f:+change-preview(
        git diff --color \
        $(git branch --show-current)..$(echo {} \
          | sed "s/^[* ]*//" \
          | awk "{print \$1}")
        )' \
      --bind 'ctrl-i:change-preview-label([ Commits ])' \
      --bind 'ctrl-i:+change-preview(
        git log $(echo {} \
        | sed "s/^[* ]*//" \
        | awk "{print \$1}") \
        --graph --color \
        --format="%C(white)%h - %C(green)%cs - %C(blue)%s%C(red)%d")' \
      --bind 'enter:execute(
        git checkout $(echo {} \
        | sed "s/^[* ]*//" \
        | awk "{print \$1}")
        )' \
      --bind "enter:+reload($git_branches)" \
      --header-first \
      --header '
      > CTRL-F to preview with diff | CTRL-I to preview with logs
      > ENTER to checkout the branch
      '
}

_fix_cursor() {
   echo -ne '\e[5 q'
}
precmd_functions+=(_fix_cursor)

function chpwd() {
    emulate -L zsh
    zoxide add $(pwd)
}

autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

setopt inc_append_history_time

# opam configuration
[[ ! -r /home/ajlow/.opam/opam-init/init.zsh ]] || source /home/ajlow/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

eval "$(atuin init zsh)"

# ~~~~~ Direnv ~~~~~
eval "$(direnv hook zsh)"
# Tone down verbosity of loading output
# https://github.com/direnv/direnv/issues/68#issuecomment-1003426550
copy_function() {
  test -n "$(declare -f "$1")" || return
  eval "${_/$1/$2}"
}
copy_function _direnv_hook _direnv_hook__old
_direnv_hook() {
  _direnv_hook__old "$@" 2> >(awk '{if (length >= 200) { sub("^direnv: export.*","direnv: export "NF" environment variables")}}1')
  wait
}

eval "$(zoxide init zsh)"

autoload -U colors && colors

AJLOW_PROMPT="%{$fg[green]%}[%{$fg[blue]%}%n@%{$fg[blue]%}%m%{ $fg[green]%}%~]%{$reset_color%}  "
AJLOW_RPROMPT="%(?..%F{red}%?%f )[%* %D{%Z}]"

_generate_prompt () {
    if [[ -n "$DIRENV_FILE" ]]; then
        PROMPT="(direnv)$AJLOW_PROMPT"
        RPROMPT="$AJLOW_RPROMPT"
    else
        PROMPT="$AJLOW_PROMPT"
        RPROMPT="$AJLOW_RPROMPT"
    fi
}
precmd_functions+=(_generate_prompt)

# Set autolaunch flag for specific terminals
if [[ $TERM == "xterm-kitty" ]]; then
    # exec kitty zellij attach -c home options --default-layout home --default-cwd $HOME
    ZELLIJ_AUTO_ATTACH="true"
    ZELLIJ_AUTO_EXIT="true"
fi

# Connect to default session
if [[ -z "$ZELLIJ" ]]; then
    if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
        zellij attach -c home options --default-layout home --default-cwd $HOME
    fi

    if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
        exit
    fi
fi
